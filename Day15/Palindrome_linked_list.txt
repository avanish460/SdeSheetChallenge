Que: Palindrome Linked List(EAsy)

Link: https://leetcode.com/problems/palindrome-linked-list/

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public boolean isPalindrome(ListNode head) {
        
        /*using two pointer approach one from the front of the list and second from teh back of the list.*/
        ListNode temp = head;
        ListNode cpy = new ListNode(0);
        ListNode p = cpy;
        int l = 0;
        //makeing a new list copy of head list
        while(temp != null){
            cpy.next = new ListNode(temp.val);
            temp = temp.next;
            cpy = cpy.next;
            l++;
        }
        
        //Reverse the head list
        temp = head;
        ListNode prev = null;
        while(temp != null){
            ListNode next = temp.next;
            temp.next = prev;
            prev = temp;
            temp = next;
        }
        
        //comparing both the list 
        for(int i=0; i<l/2; i++){
            if(prev.val != p.next.val){
                return false;
            }
            prev = prev.next;
            p = p.next;
        }
        return true;
    }
}