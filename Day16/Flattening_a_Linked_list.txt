Que: Flattening a Linked List(Medium)

Link: https://practice.geeksforgeeks.org/problems/flattening-a-linked-list/1

Solution:

class GfG
{
    Node flatten(Node root)
    {
	// Your code here
	if(root == null || root.next == null){
	    return root;
	}
	
	root.next = flatten(root.next);
	
	root = merge_two_list(root, root.next);
	return root;
    }
    
    Node merge_two_list(Node a, Node b){
        
        Node temp = new Node(0);
        Node res = temp;
        while(a != null && b != null){
            if(a.data<b.data){
                temp.bottom = a;
                a = a.bottom;
                temp = temp.bottom;
            }
            
            else{
                temp.bottom = b;
                b = b.bottom;
                temp = temp.bottom;
            }
        }
        
        if(a != null) {
            temp.bottom = a;
        }
        if(b != null){
            temp.bottom = b;
        }
        return res.bottom;
    }
}