Que: Job Sequencing Problem(Medium)

LInk: https://practice.geeksforgeeks.org/problems/job-sequencing-problem-1587115620/1#

Solution:

class Solution
{
    //Function to find the maximum profit and the number of jobs done.
    int[] JobScheduling(Job arr[], int n)
    {
        // Your code here
        
        //Sorting the array in decending order according to profit
        Arrays.sort(arr, (a,b) -> (b.profit - a.profit));
        
        //getting the max deadline among all deadlines
        int max = 0;
        for(int i=0; i<n; i++){
            if(arr[i].deadline>max){
                max = arr[i].deadline;
            }
        }
        
        //declaring and intializing result array with -1
        int[] result = new int[max+1];
        for(int i=0; i<max+1; i++){
            result[i] = -1;
        }
        
        //iterating through the sorted array and put job id in the result array according to max time taking by that job
        int jobCount = 0, maxProfit = 0;
        for(int i=0; i<n; i++){
            for(int j=arr[i].deadline; j>0; j--){
                if(result[j] == -1){
                    result[j] = arr[i].id;
                    jobCount++;
                    maxProfit += arr[i].profit;
                    break;
                }
            }
        }
        
        // System.out.println(Arrays.toString(result));
        int[] ans = new int[2];
        ans[0] = jobCount;
        ans[1] = maxProfit;
        return ans;
    }
}

/*
class Job {
    int id, profit, deadline;
    Job(int x, int y, int z){
        this.id = x;
        this.deadline = y;
        this.profit = z; 
    }
}
*/