Que: Reverse Node in k-Group(Hard)

Link: https://leetcode.com/problems/reverse-nodes-in-k-group/

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        
        if(valid_length(head, k)){
            return head;
        }
        
        //usually do reverse
        ListNode curr = head;
        ListNode prev = null, next = null;
        int count = 0;
        while(curr != null && count<k){
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
            count++;
        }
        
        if(next != null){
            ListNode temp = reverseKGroup(next, k);
            head.next = temp;
        }
        return prev;
    }
    
    boolean valid_length(ListNode head, int k){
        ListNode start = head;
        int len = 0;
        while(start != null){
            start = start.next;
            len++;
        }
        return len<k;
    }
}