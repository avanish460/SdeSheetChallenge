Que: Rotate List(Medium)

Link: https://leetcode.com/problems/rotate-list/

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        
        if(head == null || head.next == null){
            return head;
        }
        
        int len = 0;
        ListNode temp = head;
        while(temp != null){
            temp = temp.next;
            len++;
        }
       
        if(len<=k){
            k = k%len;
        }
        if(k == 0){
            return head;
        }
        
        len -= k;
        int count = 1;
        temp = head;
        while(count<len){
            temp = temp.next;
            count++;
        }
        ListNode curr = temp.next;
        temp.next = null;
        
        ListNode prev=curr;
        while(curr.next != null){
            curr = curr.next;
        }
        curr.next = head;
        return prev;
        
    }
}