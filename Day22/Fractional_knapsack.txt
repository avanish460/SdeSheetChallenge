Que: Fractional Knapsack(medium)

Link: https://practice.geeksforgeeks.org/problems/fractional-knapsack-1587115620/1#

Solution:

/*
class Item {
    int value, weight;
    Item(int x, int y){
        this.value = x;
        this.weight = y;
    }
}
*/

class itemComparator implements Comparator<Item>
{
    @Override
    public int compare(Item a, Item b) 
    {
        double r1 = (double)(a.value) / (double)(a.weight); 
        double r2 = (double)(b.value) / (double)(b.weight); 
        if(r1 < r2) return 1; 
        else if(r1 > r2) return -1; 
        else return 0; 
    }
}

class Solution
{
    //Function to get the maximum total value in the knapsack.
    double fractionalKnapsack(int W, Item arr[], int n) 
    {
        // Your code here
        Arrays.sort(arr, new itemComparator());
        
        int weightCount = 0;
        double valueCount = 0.0;
        for(int i=0; i<n; i++){
            if(weightCount + arr[i].weight <= W){
                weightCount += arr[i].weight;
                valueCount += arr[i].value;
            }else{
                double fraction = (double)arr[i].value/(double)arr[i].weight;
                valueCount += (double)(W-weightCount) * fraction;
                break;
            }
        }
        return valueCount;
    }
}