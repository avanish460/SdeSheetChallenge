Set Matrix Zeroes(Medium)

1. Brute Froce Approach(Assume the given matrix is positive)

   class Solution {
    public void setZeroes(int[][] matrix) {
        
        int rows = matrix.length;
        int cols = matrix[0].length;
        
        //Traversing in the matrix
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                
                //checking whether the given element is 0
                if(matrix[i][j] == 0){
                    
                    
                    //Traversing upward direction for changing non-zero element to -1 
                    int index = i-1;
                    while(index>=0){
                        if(matrix[index][j] != 0){
                            matrix[index][j] = -1;
                        }
                        index--;
                    }
                    
                    //Traversing downward direction for changing non-zero element to -1
                    index = i+1;
                    while(index<rows){
                        if(matrix[index][j] != 0){
                            matrix[index][j] = -1;
                        }
                        index++;
                    }
                    
                    //Traversing left direction for changing non-zero element to -1
                    index = j-1;
                    while(index>=0){
                        if(matrix[i][index] != 0){
                            matrix[i][index] = -1;
                        }
                        index --;
                    }
                    
                    //Traversing right direction for changing non-zero element to -1
                    index = j+1;
                    while(index<cols){
                        if(matrix[i][index] != 0){
                            matrix[i][index] = -1;
                        }
                        index++;
                    }
                }
                
            }
        }
        
        //converting 0 and -1 element of matrix into 0
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                if(matrix[i][j] <=0){
                    matrix[i][j]=0;
                }
            }
        }
    }
}

Time complexity:O((N*M)*(N+M));
Space complexity: O(1);


***************************************************************************************************

2. Better Approach(Using dummy Arrays)

class Solution {
    public void setZeroes(int[][] matrix) {
        
        int rows = matrix.length;
        int cols = matrix[0].length;
        int[] dummyrow = new int[rows];
        int[] dummycol = new int[cols];
        Arrays.fill(dummyrow,-1);
        Arrays.fill(dummycol,-1);
        //Traversing in the matrix
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                //element of matrix is 0 then set the row and col dummy array to 0
                if(matrix[i][j] == 0){
                    dummyrow[i] = 0;
                    dummycol[j] = 0;
                }
            }
        }
        
        //converting 0th element corresponding rows and cols to 0
        for(int i=0; i<rows; i++){
            for(int j=0; j<cols; j++){
                if(dummyrow[i] == 0 || dummycol[j] == 0){
                    matrix[i][j]=0;
                }
            }
        }
    }
}

Time Complexity: O(N*m + N*M);
Space Complexity: O(N);

***************************************************************************************************

3. Optimizing better approch(using first row and col of the matrix as a dummy array instead of 
   creating new one so that it will reduce the time complexity)

class Solution {
    public void setZeroes(int[][] matrix) {
        
        int rows = matrix.length;
        int cols = matrix[0].length;
        int col0 = 1;
        //Traversing in the matrix
        for(int i=0; i<rows; i++){
            //for avoding the overlapping(matrix[0][0] == 0)
            if(matrix[i][0] == 0){
                col0 = 0;
            }
            for(int j=1; j<cols; j++){
                //element of matrix is 0 then set the first row and col of matrix(dummy) 0
                if(matrix[i][j] == 0){
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        //converting 0th element corresponding rows and cols to 0
        for(int i=rows-1; i>=0; i--){
            for(int j=cols-1; j>0; j--){
                if(matrix[i][0] == 0 || matrix[0][j] == 0){
                    matrix[i][j]=0;
                }
            }
        //if the first element of the first row has 0 value then it will set all rows to 0
            if(col0 == 0){
                matrix[i][0] = 0;
            }
        }
    }
}

Time Complexity: O(2*(N*M));
Sapce Complexity: O(1);